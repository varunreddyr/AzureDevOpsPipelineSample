trigger:

  branches:
    include:
    - refs/heads/master
  paths:
    include:
    - API
name: Build Pipeline
jobs:
- job: Phase_1
  displayName: Build
  cancelTimeoutInMinutes: 1
  pool:
    name: Default
  steps:
  - checkout: self
    clean: true
  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: restore
      projects: API.sln
      selectOrConfig: config
      nugetConfigPath: nuget.config
      noCache: true
  
  - task: DotNetCoreCLI@2
    displayName: dotnet build & Publish
    inputs:
      projects: API.sln
      arguments: /t:Publish /p:OutputPath=$(Build.artifactstagingdirectory)\app /p:configuration=$(PRO.Configuration)
 
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.artifactstagingdirectory)'
    inputs:
      SourceFolder: API/dockercmd2004
      Contents: dockerfile
      TargetFolder: $(Build.artifactstagingdirectory)
      OverWrite: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: API'
    inputs:
      ArtifactName: API
- job: Job_1
  displayName: Build Docker Agent
  pool:
    name: Default
  steps:
  - checkout: self
    clean: true
  - task: DownloadBuildArtifacts@0
    displayName: Download Build Artifacts
    inputs:
      artifactName: API
  - task: Docker@0
    displayName: Build an image
    inputs:
      azureSubscriptionEndpoint: 
      azureContainerRegistry: 'ACR'
      dockerFile: $(Build.ArtifactStagingDirectory)\API\dockerfile
      imageName: $(PRO.Configuration)/API:$(Build.BuildNumber)
      includeLatestTag: true
  - task: Docker@1
    displayName: Push images
    inputs:
      azureSubscriptionEndpoint: 
      azureContainerRegistry: ACR
      command: Push an image
      imageName: $(PRO.Configuration)/API:$(Build.BuildNumber)
      includeLatestTag: true
  - task: NuGetCommand@2
    inputs:
     command: 'restore'
     restoreSolution: '**/*.sln'
     feedsToUse: 'select'
     vstsFeed: '09af53e0-4f44-4e49-819d-2d03f116da6f/3c6e8f92-2ba4-4fd7-a9a5-df762d7ffaec'

